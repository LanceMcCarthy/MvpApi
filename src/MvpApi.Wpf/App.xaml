<Application x:Class="MvpApi.Wpf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:converters="clr-namespace:MvpApi.Wpf.Converters"
             xmlns:selectors="clr-namespace:MvpApi.Wpf.Selectors"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             StartupUri="ShellWindow.xaml">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/System.Windows.xaml" />
                <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.xaml" />
                <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.Input.xaml" />
                <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.GridView.xaml" />
                <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.Navigation.xaml" />
                <ResourceDictionary Source="Styles/GeneralStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <telerik:StringToGlyphConverter x:Key="StringToGlyphConverter" />

            <converters:ValueWhenConverter x:Key="InvertBoolConv">
                <converters:ValueWhenConverter.When>
                    <system:Boolean>True</system:Boolean>
                </converters:ValueWhenConverter.When>
                <converters:ValueWhenConverter.Value>
                    <system:Boolean>False</system:Boolean>
                </converters:ValueWhenConverter.Value>
                <converters:ValueWhenConverter.Otherwise>
                    <system:Boolean>True</system:Boolean>
                </converters:ValueWhenConverter.Otherwise>
            </converters:ValueWhenConverter>

            <converters:ValueWhenConverter x:Key="BoolToVisibilityConv">
                <converters:ValueWhenConverter.When>
                    <system:Boolean>True</system:Boolean>
                </converters:ValueWhenConverter.When>
                <converters:ValueWhenConverter.Value>
                    <Visibility>Visible</Visibility>
                </converters:ValueWhenConverter.Value>
                <converters:ValueWhenConverter.Otherwise>
                    <Visibility>Collapsed</Visibility>
                </converters:ValueWhenConverter.Otherwise>
            </converters:ValueWhenConverter>

            <converters:ValueWhenConverter x:Key="InvertedBoolToVisibilityConv">
                <converters:ValueWhenConverter.When>
                    <system:Boolean>True</system:Boolean>
                </converters:ValueWhenConverter.When>
                <converters:ValueWhenConverter.Value>
                    <Visibility>Collapsed</Visibility>
                </converters:ValueWhenConverter.Value>
                <converters:ValueWhenConverter.Otherwise>
                    <Visibility>Visible</Visibility>
                </converters:ValueWhenConverter.Otherwise>
            </converters:ValueWhenConverter>

            <!-- If value > 1, return Collapsed-->
            <converters:ThresholdConverter x:Key="CountToVisibilityConv"
                                           Threshold="1">
                <converters:ThresholdConverter.OverResult>
                    <Visibility>Collapsed</Visibility>
                </converters:ThresholdConverter.OverResult>
                <converters:ThresholdConverter.UnderResult>
                    <Visibility>Visible</Visibility>
                </converters:ThresholdConverter.UnderResult>
            </converters:ThresholdConverter>

            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConv" />
            <converters:NullToVisibilityConverter x:Key="InvertedNullToVisibilityConv"
                                                  IsInverted="True" />
            <converters:PathToBitmapImageConverter x:Key="BitmapImageConv" />
            <converters:DateTimeToDateTimeOffsetConverter x:Key="DateTimeOffsetConv" />
            <converters:DoubleToIntConverter x:Key="DoubleToIntConv" />
            <converters:UploadStatusToBrushConverter x:Key="UploadStatusBackgroundConv" />
            <converters:UploadStatusToBoolConverter x:Key="UploadStatusToBoolConv" />

            <converters:MvcContentUrlConverter x:Key="MvcContentUrlConv" />
            <converters:PrivacyLevelToBrushConverter x:Key="PrivacyLevelToBrushConv" />
            <converters:StringToUriConverter x:Key="StringToUriConv" />

            <converters:ContributionTypeNameToBrushConverter x:Key="ContributionTypeNameToBackgroundConv" />
            <converters:ContributionTypeNameToBrushConverter x:Key="ContributionTypeNameToForegroundConv"
                                                             IsForegroundColor="True" />

            <!--<Style TargetType="telerik:RadBusyIndicator" 
                   BasedOn="{StaticResource RadBusyIndicatorStyle}">
                <Setter Property="Background"
                        Value="#99000000"/>
                <Setter Property="Foreground"
                        Value="#DDFFFFFF" />
            </Style>-->

            <!--<Style x:Key="TechnologyAreaComboBoxStyle"
                   TargetType="ComboBox">
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Left" />
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Contribution Technology Area"
                                           Margin="0,0,5,0" />
                                <TextBlock Text="(required)"
                                           Margin="5,0"
                                           FontStyle="Italic"
                                           Foreground="Red" />
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel MaxWidth="300">
                                <TextBlock Text="{Binding Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel MaxWidth="600"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AdditionalTechnologyAreasListViewStyle"
                   TargetType="ListView">
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Left" />
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel MaxWidth="300">
                                <TextBlock Text="{Binding Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel MaxWidth="600"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->
        </ResourceDictionary>
    </Application.Resources>
</Application>

<!--<ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Cloud.Controls.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.RibbonView.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.RichTextBox.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.Diagrams.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.Diagrams.Extensions.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.Diagrams.Ribbon.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.Docking.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.ScheduleView.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.GanttView.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.FileDialogs.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.DataVisualization.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.Pivot.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.PivotFieldList.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.ImageEditor.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.VirtualGrid.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.Spreadsheet.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.ConversationalUI.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.Media.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/Telerik.Windows.Controls.SyntaxEditor.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/telerik.windows.controls.fixeddocumentviewersui.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/telerik.windows.documents.proofing.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/telerik.windows.controls.spreadsheetui.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/telerik.windows.controls.data.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/telerik.windows.controls.chart.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/telerik.windows.controls.expressions.xaml"/>
            <ResourceDictionary Source="/Telerik.Windows.Themes.Fluent;component/Themes/telerik.windows.controls.fixeddocumentviewers.xaml"/>-->