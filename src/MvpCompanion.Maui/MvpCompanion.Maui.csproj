<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFrameworks>$(MauiPlatforms)</TargetFrameworks>
		<OutputType>Exe</OutputType>
		<RootNamespace>MvpCompanion.Maui</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>

		<!-- Display name, App Identifier, Versions -->
		<ApplicationTitle>MVP Companion</ApplicationTitle>
		<ApplicationId>com.LancelotSoftware.MvpCompanion</ApplicationId>
		<ApplicationVersion>1</ApplicationVersion>

		<!-- Required for C# Hot Reload -->
		<UseInterpreter Condition="'$(Configuration)' == 'Debug'">True</UseInterpreter>
		<MtouchLink Condition="'$(TargetFramework)' == 'net6.0-ios'  OR '$(TargetFramework)' == 'net6.0-maccatalyst'">SdkOnly</MtouchLink>
	</PropertyGroup>

	<PropertyGroup Condition="'$(TargetFramework)' == 'net6.0-maccatalyst'">
		<DefineConstants>$(DefineConstants);__MACCATALYST__</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="$(TargetFramework.Contains('-windows'))">
		<OutputType>WinExe</OutputType>
		<RuntimeIdentifier>win10-x64</RuntimeIdentifier>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->

		<!-- Splash Screen -->

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
	  <None Remove="Resources\appicon.svg" />
	  <None Remove="Resources\Images\tab_account.svg" />
	  <None Remove="Resources\Images\tab_account_on.svg" />
	  <None Remove="Resources\Images\tab_briefcase.svg" />
	  <None Remove="Resources\Images\tab_briefcase_on.svg" />
	  <None Remove="Resources\Images\tab_home.svg" />
	  <None Remove="Resources\Images\tab_home_on.svg" />
	  <None Remove="Resources\Images\tab_information.svg" />
	  <None Remove="Resources\Images\tab_information_on.svg" />
	  <None Remove="Resources\Images\tab_settings.svg" />
	  <None Remove="Resources\Images\tab_settings_on.svg" />
	  <None Remove="Resources\Images\tab_upload.svg" />
	  <None Remove="Resources\Images\tab_upload_on.svg" />
	</ItemGroup>

	<ItemGroup>
	  <MauiIcon Include="Resources\appicon.svg" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\MvpApi.Common\MvpApi.Common.csproj" />
	  <ProjectReference Include="..\MvpApi.Services\MvpApi.Services.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="CommonHelpers" Version="1.1.3" />
	  <PackageReference Include="Telerik.UI.for.Maui" Version="0.6.0" />
	</ItemGroup>

	<ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
		<!-- Required - WinUI does not yet have buildTransitive for everything -->
		<PackageReference Include="Microsoft.WindowsAppSDK" Version="1.0.0" />
		<PackageReference Include="Microsoft.Graphics.Win2D" Version="1.0.0.30" />
		<PackageReference Include="Microsoft.Toolkit.Uwp.Notifications" Version="7.0.1" />
	</ItemGroup>

	<!-- PUBLISHING Android 
	dotnet publish -f:net6.0-android -c:Release
	I can replace some or all of the XML defined items with CLI params 
	/p:AndroidKeyStore=True
	/p:AndroidSigningKeyStore=dvlup.keystore
	/p:AndroidSigningStorePass=$(android_keystore_password)
	/p:AndroidSigningKeyAlias=dvlup.alias
	/p:AndroidSigningKeyPass=mypassword=$(android_keystore_alias_password)
	-->
	<PropertyGroup Condition="$(TargetFramework.Contains('-android')) and '$(Configuration)' == 'Release'">
		<AndroidKeyStore>True</AndroidKeyStore>
		<AndroidSigningKeyStore>dvlup.keystore</AndroidSigningKeyStore>
		<AndroidSigningStorePass>$(android_keystore_password)</AndroidSigningStorePass>
		<AndroidSigningKeyAlias>dvlup.alias</AndroidSigningKeyAlias>
		<AndroidSigningKeyPass>$(android_keystore_alias_password)</AndroidSigningKeyPass>
	</PropertyGroup>

	<!-- PUBLISHING iOS 
	dotnet publish -f:net6.0-ios -c:Release /p:ServerAddress=192.168.1.184 /p:ServerUser=$MACOS_USER_NAME /p:ServerPassword=$MACOS_USER_PASSWORD /p:TcpPort=58181 /p:ArchiveOnBuild=true /p:_DotNetRootRemoteDirectory=/Users/mccarthy/Library/Caches/Xamarin/XMA/SDKs/dotnet/ /p:EnableAssemblyILStripping=false
	-->
	<PropertyGroup Condition="$(TargetFramework.Contains('-ios')) and '$(Configuration)' == 'Release'">
		<RuntimeIdentifier>ios-arm64</RuntimeIdentifier>
		<CodesignKey>Apple Distribution: Lancelot Software, LLC (L65255N3F7)</CodesignKey>
		<CodesignProvision>MvpCompanion_AppStore_2022.mobileprovision</CodesignProvision>
	</PropertyGroup>

	<PropertyGroup Condition="$(TargetFramework.Contains('-ios')) and '$(Configuration)' == 'Debug'">
		<RuntimeIdentifier>ios-arm64</RuntimeIdentifier>
		<CodesignKey>Apple Development: Lance McCarthy (AJ9XMDH9A2)</CodesignKey>
		<CodesignProvision>MvpCompanion_Dev_2022.mobileprovision</CodesignProvision>
	</PropertyGroup>

	<!-- PUBLISHING MacCatalyst -->
	<!--<PropertyGroup Condition="$(TargetFramework.Contains('-maccatalyst')) and '$(Configuration)' == 'Release'">
		<RuntimeIdentifier>maccatalyst-x64</RuntimeIdentifier>
		<CodesignKey>Apple Distribution: Lancelot Software, LLC (L65255N3F7)</CodesignKey>$(apple_release_codesignIdentity)
		<CodesignProvision>MvpCompanion_MacStore_2022.provisionprofile</CodesignProvision>
	</PropertyGroup>-->

	<!--<PropertyGroup Condition="$(TargetFramework.Contains('-ios')) and '$(Configuration)' == 'Debug'">
		<RuntimeIdentifier>maccatalyst-x64</RuntimeIdentifier>
		<CodesignKey>Apple Development: Lance McCarthy (AJ9XMDH9A2)</CodesignKey>
		<CodesignProvision>MvpCompanion_Dev_2022.mobileprovision</CodesignProvision>
	</PropertyGroup>-->

	<!-- PUBLISHING Windows
	This is just like packaging WinUI projects	
    msbuild /restore /t:Publish /p:TargetFramework=net6.0-windows10.0.19041 /p:configuration=release /p:GenerateAppxPackageOnBuild=true /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint=$PFX_THUMBPRINT /p:PackageCe
rtificatePassword=$PFX_PASSWORD
    -->
</Project>
